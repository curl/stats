#!/usr/bin/perl

# NOTE:
#
# This accesses the web site git repo to find the 'vuln.pm' file with the
# proper meta-data!
#
# Shows the number of days each CVE was present in a curl release before
# fixed.
#

my $webroot = $ARGV[0] || "../curl-www";

require "$webroot/docs/vuln.pm";
$csv = "$webroot/docs/releases.csv";

sub relinfo {
    open(C, "<$csv");
    while(<C>) {
        chomp;
        my ($index, $version, $vulns, $date, $since, $ddays, $adays, $dbugs, $abugs,
            $dchanges, $achanges) = split(';', $_);
        $release{$version}=$date;
        push @inorder, $version;
        $p = $date; # remmeber the last date, which is the earliest
    }
    close(C);
}

relinfo();

sub deltadays {
    my ($prev, $date) = @_;
    my $psecs = `date +%s -d "$prev"`;
    my $secs = `date +%s -d "$date"`;
    return int(($secs-$psecs)/86400);
}

sub average {
    my @p = @_;
    my $sum;
    for my $y (@p) {
        $sum += $y;
    }
    return $sum / scalar(@p);
}

sub median {
    my @a = @_;
    my @vals = sort {$a <=> $b} @a;
    my $len = @vals;
    if($len%2) { #odd?
        return $vals[int($len/2)];
    }
    else {
        #even
        return ($vals[int($len/2)-1] + $vals[int($len/2)])/2;
    }
}

my $amount = 0;
my $prevdate = "1998-03-20";
my $flaws;
my @pp;
my @da;

sub conv {
    my ($days) = @_;
    return $days / 365.25;
}

for(reverse @vuln) {
    my ($id, $start, $stop, $desc, $cve, $date, $rdate, $cwe, $award,
        $area, $cissue, $where, $severity, $issue)=split('\|');
    if($date =~ /^(\d\d\d\d)(\d\d)(\d\d)/) {
        ($y, $m, $d)=(0+$1, 0+$2, 0+$3);
        $date = sprintf("%04d-%02d-%02d", $y, $m, $d);
    }
    my $delta = deltadays($release{$start}, $date);
    push @ppall, $delta;

    my $average = average(@ppall);
    my $median = median(@ppall);

    printf "%s;%s;%.2f;%.2f;%u;%.2f;%.2f\n", $cve, $date,
        conv($delta),
        conv(deltadays("1998-03-20", $date)),
        ++$flaws,
        conv($average), conv($median);
    $prevdate = $date;
}
