#!/usr/bin/perl

require "./stats/tag2date.pm";

sub num {
    my ($t)=@_;
    if($t =~ /^curl-(\d)_(\d+)_(\d+)/) {
        return 10000*$1 + 100*$2 + $3;
    }
    elsif($t =~ /^curl-(\d)_(\d+)/) {
        return 10000*$1 + 100*$2;
    }
}


sub sortthem {
    return num($a) <=> num($b);
}

@alltags= `git tag -l`;

foreach my $t (@alltags) {
    chomp $t;
    if($t =~ /^curl-([0-9_]*[0-9])\z/) {
        push @releases, $t;
    }
}

sub cpyuse {
    my ($tag, $path) = @_;

    # Get source files to count
    my @files;
    open(G, "git ls-tree -r --name-only $tag -- $path 2>/dev/null|");
    while(<G>) {
        chomp;
        if($_ =~ /[ch]\z/) {
            push @files, $_;
        }
    }
    close(G);

    my $cmd;
    for(@files) {
        $cmd .= "$tag:$_ ";
    }

    my $count;
    my $alloc;

    open(G, "git show $cmd 2>/dev/null| grep -aE 'sscanf\\('|");
    while(<G>) {
        $count++;
    }
    close(G);

    my $blanks, $comments, $code;
    open(G, "git show $cmd 2>/dev/null| cloc --force-lang=C --csv -|");
    while(<G>) {
        if($_ =~ /^1,SUM,(\d*),(\d*),(\d*)/) {
            ($blanks, $comments, $code)=($1, $2, $3);
            last;
        }
    }
    close(G);

    return ($count, $code);
}

print <<CACHE
2000-03-14;1.689;19
2000-03-21;1.693;19
2000-03-21;1.684;19
2000-08-21;1.860;23
2000-08-30;1.843;23
2000-09-28;1.791;25
2000-10-16;1.742;25
2000-12-04;1.642;24
2001-01-05;1.615;24
2001-01-27;1.878;25
2001-02-13;1.823;25
2001-03-22;1.867;27
2001-04-04;1.864;27
2001-04-23;1.854;27
2001-05-07;1.838;27
2001-06-07;1.819;27
2001-08-20;1.831;27
2001-09-25;1.726;27
2001-11-04;1.778;29
2001-12-05;1.787;30
2002-01-23;1.670;30
2002-02-05;1.667;30
2002-03-07;1.635;30
2002-04-15;1.601;30
2002-05-13;1.569;30
2002-06-13;1.497;29
2002-10-01;1.482;30
2002-10-11;1.477;30
2002-11-18;1.467;30
2003-01-14;1.449;30
2003-04-02;1.554;30
2003-05-19;1.523;30
2003-07-28;1.457;31
2003-08-15;1.416;31
2003-11-01;1.281;29
2004-01-22;1.247;29
2004-03-18;1.182;29
2004-04-26;1.285;32
2004-06-02;1.128;30
2004-08-10;1.165;31
2004-10-18;1.214;33
2004-12-20;1.168;33
2005-02-01;1.159;33
2005-03-04;1.118;33
2005-04-05;1.115;33
2005-05-16;1.086;33
2005-09-01;1.072;33
2005-10-13;1.051;33
2005-12-06;1.041;33
2006-02-27;1.094;35
2006-03-20;1.094;35
2006-06-12;1.035;35
2006-08-07;1.023;35
2006-10-29;0.967;34
2007-01-29;0.926;34
2007-04-11;0.886;34
2007-06-25;0.862;34
2007-07-10;0.852;34
2007-09-13;0.834;34
2007-10-29;0.816;34
2008-01-28;0.802;34
2008-03-30;0.800;34
2008-06-04;0.792;34
2008-09-01;0.801;35
2008-11-05;0.740;33
2008-11-13;0.742;33
2009-01-19;0.740;33
2009-03-02;0.672;31
2009-05-18;0.669;31
2009-08-12;0.640;30
2009-11-04;0.633;30
2010-02-09;0.627;32
2010-04-14;0.620;32
2010-06-16;0.581;32
2010-08-11;0.577;32
2010-10-12;0.591;33
2010-12-15;0.602;34
2011-02-17;0.592;34
2011-04-17;0.585;34
2011-04-22;0.584;34
2011-06-23;0.584;34
2011-09-13;0.562;33
2011-11-14;0.550;33
2011-11-17;0.550;33
2012-01-24;0.560;34
2012-03-22;0.554;34
2012-05-24;0.553;34
2012-07-27;0.520;34
2012-10-10;0.499;33
2012-11-20;0.496;33
2013-02-06;0.494;33
2013-04-12;0.500;34
2013-06-22;0.451;31
2013-08-11;0.436;31
2013-10-13;0.419;30
2013-12-16;0.415;30
2014-01-29;0.413;30
2014-03-26;0.406;30
2014-05-20;0.402;30
2014-07-16;0.399;30
2014-09-10;0.393;30
2014-11-05;0.394;30
2015-01-07;0.383;30
2015-02-25;0.388;30
2015-04-22;0.400;31
2015-04-28;0.400;31
2015-06-17;0.397;31
2015-08-11;0.395;31
2015-10-07;0.395;31
2015-12-01;0.390;31
2016-01-27;0.389;31
2016-02-08;0.388;31
2016-03-23;0.387;31
2016-05-17;0.380;31
2016-05-30;0.380;31
2016-07-21;0.391;32
2016-08-03;0.391;32
2016-09-07;0.378;31
2016-09-14;0.377;31
2016-11-02;0.390;32
2016-12-20;0.383;32
2016-12-22;0.383;32
2017-02-22;0.393;33
2017-02-24;0.393;33
2017-04-19;0.391;33
2017-06-14;0.389;33
2017-08-09;0.388;33
2017-08-13;0.388;33
2017-10-04;0.367;32
2017-10-23;0.365;32
2017-11-29;0.362;32
2018-01-23;0.352;32
2018-03-13;0.339;31
2018-05-15;0.336;31
2018-07-11;0.334;31
2018-09-04;0.333;31
2018-10-30;0.251;24
2018-12-12;0.262;25
2019-02-06;0.261;25
2019-03-27;0.269;26
2019-05-22;0.270;26
2019-06-04;0.270;26
2019-07-17;0.270;26
2019-07-19;0.270;26
2019-09-10;0.261;26
2019-11-05;0.260;26
2020-01-08;0.257;26
2020-03-04;0.255;26
2020-03-11;0.254;26
2020-04-29;0.251;26
2020-06-23;0.248;26
2020-06-30;0.248;26
2020-08-19;0.247;26
2020-10-14;0.246;26
2020-12-09;0.254;27
2021-02-03;0.249;27
2021-03-31;0.248;27
2021-04-14;0.248;27
2021-05-26;0.246;27
2021-07-21;0.248;27
2021-09-14;0.247;27
2021-09-22;0.247;27
2021-11-10;0.254;28
2022-01-05;0.253;28
2022-03-05;0.256;28
2022-04-27;0.253;28
2022-05-11;0.253;28
2022-06-27;0.251;28
2022-08-31;0.250;28
2022-10-26;0.256;29
2022-12-21;0.253;29
2023-02-15;0.245;29
2023-02-20;0.228;27
2023-03-20;0.059;7
2023-03-20;0.059;7
2023-05-17;0.057;7
2023-05-23;0.057;7
2023-05-30;0.057;7
2023-07-19;0.057;7
2023-07-26;0.057;7
2023-09-13;0.049;6
2023-10-11;0.049;6
2023-12-06;0.049;6
2024-01-31;0.048;6
2024-03-27;0.047;6
2024-03-27;0.047;6
2024-05-22;0.046;6
2024-07-24;0.045;6
2024-07-31;0.045;6
2024-09-11;0.045;6
2024-09-18;0.045;6
2024-11-06;0.044;6
CACHE
    ;

sub show {
    my ($t, $d) = @_;
    my ($cpy, $code) = cpyuse($t, "lib src");
    printf "$d;%.3f;%u\n", $cpy * 1000 / $code, $cpy;
}

foreach my $t (sort sortthem @releases) {
    if(num($t) <= 81100) {
        next;
    }
    my $d = tag2date($t);
    show($t, $d);
}

$t=`git describe`;
chomp $t;

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime(time);
my $d = sprintf "%04d-%02d-%02d", $year + 1900, $mon + 1, $mday;

show($t, $d);
